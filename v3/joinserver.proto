// Copyright Â© 2020 The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package org.packetbroker.v3;

import "packetbroker/api/v3/contact.proto";
import "packetbroker/api/v3/target.proto";

option go_package = "go.packetbroker.org/api/v3;packetbroker";

message JoinServer {
  // Unique identifier of the Join Server.
  uint32 id = 1;
  // Name of the Join Server.
  string name = 2;
  // JoinEUI prefixes of this Join Server.
  repeated JoinEUIPrefix join_eui_prefixes = 3;
  // Administrative contact.
  ContactInfo administrative_contact = 4;
  // Technical contact.
  ContactInfo technical_contact = 5;
  // Indicates whether the Join Server is publicly listed.
  bool listed = 6;

  oneof resolver {
    // Target to lookup the endpoint based on DevEUI for this set of JoinEUIs.
    Target lookup = 7;
    // Fixed endpoint which handles activations from any DevEUI for this set of JoinEUIs.
    JoinServerFixedEndpoint fixed = 8;
  }
}

message JoinEUIPrefix {
  uint64 value = 1;
  // Significant bits of value.
  uint32 length = 2;
}

message JoinServerFixedEndpoint {
  // LoRa Alliance NetID of the Member.
  uint32 net_id = 1;
  // ID assigned by the Member (optional).
  string tenant_id = 2;
  // Cluster of the Member (optional).
  string cluster_id = 3;
}

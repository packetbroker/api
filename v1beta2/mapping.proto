// Copyright Â© 2020 The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package org.packetbroker.v1beta2;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "packetbroker/api/v1beta2/enums.proto";
import "packetbroker/api/v1beta2/location.proto";

option go_package = "go.packetbroker.org/api/v1beta2;packetbroker";

message GatewayVisibility {
  // Show location.
  bool location = 1;
  // Show antenna placement (indoor/outdoor).
  bool antenna_placement = 2;
  // Show antenna count.
  bool antenna_count = 3;
  // Show whether the gateway produces fine timestamps.
  bool fine_timestamps = 4;
  // Show contact information.
  bool contact_information = 5;
  // Show status (online/offline).
  bool status = 6;
  // Show receive and transmission counters.
  bool counters = 7;
  // Show frequency plan.
  bool frequency_plan = 8;
}

message GatewayFrequencyPlan {
  // Region of the frequency plan.
  Region region = 1;

  message Channel {
    // Frequency (Hz).
    uint64 frequency = 1;
    // Minimum data rate.
    uint32 min_data_rate = 2;
    // Maximum data rate.
    uint32 max_data_rate = 3;
    // Modulation.
    Modulation modulation = 4;
  }
  repeated Channel uplink_channels = 2;
}

message Gateway {
  // LoRa Alliance NetID of the Forwarder Member.
  uint32 forwarder_net_id = 1;
  // Forwarder identifier issued by the Forwarder Member.
  string forwarder_id = 2;
  // Unique identifier of the gateway.
  fixed64 eui = 3;
  // Timestamp when the gateway was last updated.
  google.protobuf.Timestamp updated_at = 4;

  message Terrestrial {
    // Location of the (first) antenna.
    // Subscribing Home Networks receive this value if the Gateway Visibility has location set.
    Location location = 1;
    // Antenna placement (indoor/outdoor).
    // Subscribing Home Networks receive this value if the Gateway Visibility has antenna_placement set.
    TerrestrialAntennaPlacement antenna_placement = 2;
    // Number of antennas.
    // Subscribing Home Networks receive this value if the Gateway Visibility has antenna_count set.
    google.protobuf.UInt32Value antenna_count = 3;
    // Indicates whether the gateway produces fine timestamps.
    // Subscribing Home Networks receive this value if the Gateway Visibility has fine_timestamps set.
    google.protobuf.BoolValue fine_timestamps = 4;
  }
  message Satellite {
    // Satellite location.
    // Subscribing Home Networks receive this value if the Gateway Visibility has location set.
    Location location = 1;
    // Field of view (meters).
    // Subscribing Home Networks receive this value if the Gateway Visibility has location set.
    double field_of_view = 2;
    // Trajectory, typically containing the recent past and projected path.
    // Subscribing Home Networks receive this value if the Gateway Visibility has location set.
    repeated TimedLocation trajectory = 3;
  }
  oneof location {
    Terrestrial terrestrial = 5;
    Satellite satellite = 6;
  }

  // Contact name.
  // Subscribing Home Networks receive this value if the Gateway Visibility has contact_information set.
  string contact_name = 7;
  // Contact email address.
  // Subscribing Home Networks receive this value if the Gateway Visibility has contact_information set.
  string contact_email = 8;
  // Contact URL.
  // Subscribing Home Networks receive this value if the Gateway Visibility has contact_information set.
  string contact_url = 9;

  // Indicates whether the gateway is online.
  // Subscribing Home Networks receive this value if the Gateway Visibility has status set.
  google.protobuf.BoolValue online = 10;

  // Total number of received messages.
  // Subscribing Home Networks receive this value if the Gateway Visibility has counters set.
  google.protobuf.UInt64Value rx_count = 11;
  // Number of transmitted messages.
  // Subscribing Home Networks receive this value if the Gateway Visibility has counters set.
  google.protobuf.UInt64Value tx_count = 12;

  // Frequency plan of the gateway.
  // Subscribing Home Networks receive this value if the Gateway Visibility has frequency_plan set.
  GatewayFrequencyPlan frequency_plan = 13;
}

message Gateways {
  repeated Gateway gateways = 1;
}
